# "First, solve the problem. Then, write the code. -John Johnson"
# "Or use Vangav M"
# www.vangav.com

# MIT License
#
# Copyright (c) 2016 Vangav
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# Community
# Facebook Group: Vangav Open Source - Backend
#   fb.com/groups/575834775932682/
# Facebook Page: Vangav
#   fb.com/vangav.f
# 
# Third party communities for Vangav Backend
#   - play framework
#   - cassandra
#   - datastax
#   
# Tag your question online (e.g.: stack overflow, etc ...) with
#   #vangav_backend
#   to easier find questions/answers online
 
# @author mustapha
# fb.com/mustapha.abdallah

# Request properties

# Every request-to-response operation passes by the following steps where
#   all steps are optional except for steps preceded by an *
# pre processing
# 1- check device
# 2- throttle request
# 3- validate request parameters
# 4- authenticate request
# processing
# 5- * process request and make response
# post processing (after response is sent)
# default operations (after every response regardless of the request type)
# 6- send push notifications (for mobile applications)
# 7- analysis
# 8- logging
# The following properties are set to true/false to enable/disable optional
#   steps - all values are true (enabled) by default

# Check Source is used to check the request source for device-specific
#   operations (e.g.: if a mobile app backend wants to reject requests coming
#   from computers to potentially try to cause some harm)
# Also for specific-client applications (like mobile apps) client-verification
#   happens here (using request hashing using a secret phrase or else)
# Default: true
check_source=true

# Throttle is a common need for mobile applications and websites to ban
#   behavior like spam, DOS, etc ...
# Default: true
throttle=true

# Validate param is used to validate a request (e.g.: validate e-mail format,
#   photo size, etc ...)
# Default: true
validate_param=true

# Authenticate is used to authenticate a request (e.g.: OAuth 2,
#   Facebook Login, etc ...)
# Default: true
authenticate=true

# NOTE: all of the following operations happen after a response is sent back
#         for a request

# After response is used to switch on/off all after response operations
#   (each of those operation has a switch property whose value only matters
#   if this property's value is true)
# Default: true
after_response=true

# After processing is used to enable doing further processing for a request
#   after a response is sent. (e.g.: let's say someone shared a public post
#   on Facebook, before a response is sent this post must be made to appear
#   for that user's friends which is critical for a successful post; then
#   in after processing the post gets assigned to more non-friend users which
#   if failed doesn't affect the success of the request from the
#   user-experience point of view)
# Default: true
after_processing=true

# Default operations are used to execute operations that happen after each
#   request regardless of the type of that request (e.g.: in a mobile app
#   default operations can be used to update the user's notifications'
#   badge number; for example to reset it on the backend side since a request
#   means that the user opened the app)
# Default: true
default_operations=true

# Notifications is used to enable sending push notifications
# Default: true
notifications=true

# Analysis is used to enable doing analysis after requests
# Default: true
analysis=true

# Logging is used to enable logging requests, responses, exceptions, etc ...
# Default: true
logging=true
